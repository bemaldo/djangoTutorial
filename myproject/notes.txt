manage.py is a shortcut to use the django-admin command-line utility.  It's used to run management commands related to our project.  We will use it to run the development servver, run tests, create migrations and much more.

__init__.py this empty file tells Python that this folder is a Python package.

settings.py this file contains all the project's configuration.  We will refer to this file all the time!

urls.py this file is responsible for mapping the routes and paths in our project.  For example, if you want to show something in the URL "/about/", you have to map it here first.

wsgi.py this file is a simple gateway inteface used for deployment.  You don't have to bother about it.  Just let it be for now.


app is the web application that does something usually composed of a set of models (database tables), views, templates, tests.

project is a collection of configurations and apps.  One project can be composed of multiple apps, or a single app.


**Django has this concept of apps.  the idea is to breakdown a project into several modules (or apps).


migrations/ here django stores some files to keep track of the changes you create in the models.py file, so to keep the database and the models.py syncronized.

admin.py this is a configuration file for a built-in Django app called Django Admin

apps.py this is a configuration file of the app itself.

models.py here is where we define the entities of our web application.  The models are translated automatically by Django into database tables.

tests.py this file is used to write unit tests for the app

views.py this is the file where we handle the request/response cycle of our web application
**once a view is created, it needs to be mapped to a url via the "myproject" urls.py file.


